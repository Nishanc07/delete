{
 "Resources": {
  "LambdaFunctionServiceRoleC555A460": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "LambdaApiStack/LambdaFunction/ServiceRole/Resource"
   }
  },
  "LambdaFunctionBF21E41F": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-us-east-1"
     },
     "S3Key": "9d5e01cc7c051b6d54a47d66ec7b283b23f0acf1d9ad29902328c86741e1587d.zip"
    },
    "Environment": {
     "Variables": {
      "LISTENER_ARN": "",
      "TARGET_GROUP_ARN": ""
     }
    },
    "Handler": "index.handler",
    "Role": {
     "Fn::GetAtt": [
      "LambdaFunctionServiceRoleC555A460",
      "Arn"
     ]
    },
    "Runtime": "nodejs16.x"
   },
   "DependsOn": [
    "LambdaFunctionServiceRoleC555A460"
   ],
   "Metadata": {
    "aws:cdk:path": "LambdaApiStack/LambdaFunction/Resource",
    "aws:asset:path": "asset.9d5e01cc7c051b6d54a47d66ec7b283b23f0acf1d9ad29902328c86741e1587d",
    "aws:asset:is-bundled": false,
    "aws:asset:property": "Code"
   }
  },
  "LambdaApi728714DB": {
   "Type": "AWS::ApiGateway::RestApi",
   "Properties": {
    "Description": "API Gateway for the Lambda function",
    "Name": "Lambda API"
   },
   "Metadata": {
    "aws:cdk:path": "LambdaApiStack/LambdaApi/Resource"
   }
  },
  "LambdaApiDeployment415810028309dc7785cdfd21074b4b7321dc1256": {
   "Type": "AWS::ApiGateway::Deployment",
   "Properties": {
    "Description": "API Gateway for the Lambda function",
    "RestApiId": {
     "Ref": "LambdaApi728714DB"
    }
   },
   "DependsOn": [
    "LambdaApiGETD67BA188"
   ],
   "Metadata": {
    "aws:cdk:path": "LambdaApiStack/LambdaApi/Deployment/Resource"
   }
  },
  "LambdaApiDeploymentStageprod51A299C1": {
   "Type": "AWS::ApiGateway::Stage",
   "Properties": {
    "DeploymentId": {
     "Ref": "LambdaApiDeployment415810028309dc7785cdfd21074b4b7321dc1256"
    },
    "RestApiId": {
     "Ref": "LambdaApi728714DB"
    },
    "StageName": "prod"
   },
   "Metadata": {
    "aws:cdk:path": "LambdaApiStack/LambdaApi/DeploymentStage.prod/Resource"
   }
  },
  "LambdaApiGETApiPermissionLambdaApiStackLambdaApi847EC6F9GET6D2249C8": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "LambdaFunctionBF21E41F",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:aws:execute-api:us-east-1:",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "LambdaApi728714DB"
       },
       "/",
       {
        "Ref": "LambdaApiDeploymentStageprod51A299C1"
       },
       "/GET/"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "LambdaApiStack/LambdaApi/Default/GET/ApiPermission.LambdaApiStackLambdaApi847EC6F9.GET.."
   }
  },
  "LambdaApiGETApiPermissionTestLambdaApiStackLambdaApi847EC6F9GETE06ED214": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "LambdaFunctionBF21E41F",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:aws:execute-api:us-east-1:",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "LambdaApi728714DB"
       },
       "/test-invoke-stage/GET/"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "LambdaApiStack/LambdaApi/Default/GET/ApiPermission.Test.LambdaApiStackLambdaApi847EC6F9.GET.."
   }
  },
  "LambdaApiGETD67BA188": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "AuthorizationType": "NONE",
    "HttpMethod": "GET",
    "Integration": {
     "IntegrationHttpMethod": "POST",
     "Type": "AWS_PROXY",
     "Uri": {
      "Fn::Join": [
       "",
       [
        "arn:aws:apigateway:us-east-1:lambda:path/2015-03-31/functions/",
        {
         "Fn::GetAtt": [
          "LambdaFunctionBF21E41F",
          "Arn"
         ]
        },
        "/invocations"
       ]
      ]
     }
    },
    "ResourceId": {
     "Fn::GetAtt": [
      "LambdaApi728714DB",
      "RootResourceId"
     ]
    },
    "RestApiId": {
     "Ref": "LambdaApi728714DB"
    }
   },
   "Metadata": {
    "aws:cdk:path": "LambdaApiStack/LambdaApi/Default/GET/Resource"
   }
  },
  "CDKMetadata": {
   "Type": "AWS::CDK::Metadata",
   "Properties": {
    "Analytics": "v2:deflate64:H4sIAAAAAAAA/01Q0U7DMAz8Ft5To8ID8LiB9oZA4wMmLzXFa5NUtcM0Vfl3knRCe7o7311s5QHapxbaOzxLY7uhGfkIy5eiHUweHZYR3bFDWHbRW+Xgzeu3v+WfNDsWySoZRgfLPoxUjILJyOMBRUgFNgWyhm20A+kWhQxO3KPSGS+5R6KbiWv1St9oGsPFkdcyvVH5vr4uWUnOhzhbqm++k/6ErpgrS+nfN/WG0mHfl8RH1CnqdWWNJONDR3CS+9/2GdqX/DMnYW7m6JUdwX7FP4jArN82AQAA"
   },
   "Metadata": {
    "aws:cdk:path": "LambdaApiStack/CDKMetadata/Default"
   }
  }
 },
 "Outputs": {
  "LambdaApiEndpointB01FF32A": {
   "Value": {
    "Fn::Join": [
     "",
     [
      "https://",
      {
       "Ref": "LambdaApi728714DB"
      },
      ".execute-api.us-east-1.",
      {
       "Ref": "AWS::URLSuffix"
      },
      "/",
      {
       "Ref": "LambdaApiDeploymentStageprod51A299C1"
      },
      "/"
     ]
    ]
   }
  }
 },
 "Parameters": {
  "BootstrapVersion": {
   "Type": "AWS::SSM::Parameter::Value<String>",
   "Default": "/cdk-bootstrap/hnb659fds/version",
   "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]"
  }
 },
 "Rules": {
  "CheckBootstrapVersion": {
   "Assertions": [
    {
     "Assert": {
      "Fn::Not": [
       {
        "Fn::Contains": [
         [
          "1",
          "2",
          "3",
          "4",
          "5"
         ],
         {
          "Ref": "BootstrapVersion"
         }
        ]
       }
      ]
     },
     "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI."
    }
   ]
  }
 }
}